package tp3pelu;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.InputMismatchException;

public class Peluqueria {
    private ArrayList<Cliente> clientes = new ArrayList<>();
    private ArrayList<Servicio> servicios = new ArrayList<>();
    private Scanner scanner = new Scanner(System.in);

    public void iniciarMenuPrincipal() {
        int opcion;
        do {
            mostrarMenuPrincipal();
            opcion = scanner.nextInt();
            scanner.nextLine(); // Consumir la nueva línea
            ejecutarOpcionMenuPrincipal(opcion);
        } while (opcion != 0);
    }

    private void mostrarMenuPrincipal() {
        System.out.println("\n---- Menú Principal ----");
        System.out.println("1. Gestión de Clientes");
        System.out.println("2. Gestión de Servicios");
        System.out.println("0. Salir");
        System.out.print("Seleccione una opción: ");
    }

    private void ejecutarOpcionMenuPrincipal(int opcion) {
        switch (opcion) {
            case 1:
                menuClientes();
                break;
            case 2:
                menuServicios();
                break;
            case 0:
                System.out.println("Saliendo del programa...");
                break;
            default:
                System.out.println("Opción no válida.");
        }
    }

    // -----------------------------------
    // Menú de Clientes
    // -----------------------------------
    private void menuClientes() {
        int opcion;
        do {
            mostrarMenuClientes();
            opcion = scanner.nextInt();
            scanner.nextLine(); // Consumir la nueva línea
            ejecutarOpcionMenuClientes(opcion);
        } while (opcion != 0);
    }

    private void mostrarMenuClientes() {
        System.out.println("\n---- Menú de Clientes ----");
        System.out.println("1. Agregar Cliente");
        System.out.println("2. Editar Cliente");
        System.out.println("3. Buscar Cliente");
        System.out.println("4. Mostrar Todos los Clientes");
        System.out.println("5. Eliminar Cliente");
        System.out.println("0. Volver al Menú Principal");
        System.out.print("Seleccione una opción: ");
    }

    private void ejecutarOpcionMenuClientes(int opcion) {
        switch (opcion) {
            case 1:
                agregarCliente();
                break;
            case 2:
                editarCliente();
                break;
            case 3:
                buscarCliente();
                break;
            case 4:
                mostrarClientes();
                break;
            case 5:
                eliminarCliente();
                break;
            case 0:
                System.out.println("Volviendo al menú principal...");
                break;
            default:
                System.out.println("Opción no válida.");
        }
    }

    private void agregarCliente() {
        System.out.print("Ingrese el nombre del cliente (obligatorio): ");
        String nombre = scanner.nextLine();
        System.out.print("Ingrese el email del cliente: ");
        String email = scanner.nextLine();
        System.out.print("Ingrese el DNI del cliente (obligatorio): ");
        String dni = scanner.nextLine();
        System.out.print("Ingrese el teléfono del cliente (obligatorio): ");
        String telefono = scanner.nextLine();
        System.out.print("Ingrese la dirección del cliente: ");
        String direccion = scanner.nextLine();
        int edad = -1; // Inicializar edad con un valor inválido
        boolean edadValida = false;

        // Validar la edad
        while (!edadValida) {
            System.out.print("Ingrese la edad del cliente: ");
            try {
                edad = scanner.nextInt();
                if (edad < 0) {
                    throw new IllegalArgumentException("La edad no puede ser negativa.");
                }
                edadValida = true; // Salir del bucle si la edad es válida
            } catch (InputMismatchException e) {
                System.out.println("Por favor, ingrese un número válido.");
                scanner.next(); // Limpiar el buffer
            } catch (IllegalArgumentException e) {
                System.out.println(e.getMessage()); // Mostrar mensaje de error
            }
        }

        // Verificar si los campos obligatorios están vacíos
        if (nombre.isEmpty() || dni.isEmpty() || telefono.isEmpty()) {
            System.out.println("Error: No se pudo crear el cliente. El nombre, DNI y teléfono son obligatorios.");
        } else {
            Cliente cliente = new Cliente(nombre, email, telefono, direccion, dni, edad);
            clientes.add(cliente);
            System.out.println("Cliente agregado exitosamente.");
        }
    }



    private void editarCliente() {
        System.out.print("Ingrese el DNI del cliente a editar: ");
        String dni = scanner.nextLine();
        Cliente cliente = buscarClientePorDNI(dni);
        if (cliente != null) {
            System.out.print("Ingrese el nuevo nombre: ");
            cliente.setNombre(scanner.nextLine());
            System.out.print("Ingrese el nuevo email: ");
            cliente.setEmail(scanner.nextLine());
            System.out.print("Ingrese el nuevo teléfono: ");
            cliente.setTelefono(scanner.nextLine());
            System.out.print("Ingrese la nueva dirección: ");
            cliente.setDireccion(scanner.nextLine());
            System.out.print("Ingrese la nueva edad: ");
            cliente.setEdad(scanner.nextInt());
            System.out.println("Cliente editado exitosamente.");
        } else {
            System.out.println("Cliente no encontrado.");
        }
    }

    private void buscarCliente() {
        System.out.print("Ingrese el DNI del cliente a buscar: ");
        String dni = scanner.nextLine();
        Cliente cliente = buscarClientePorDNI(dni);
        if (cliente != null) {
            cliente.mostrarDatos();
        } else {
            System.out.println("Cliente no encontrado.");
        }
    }

    private void mostrarClientes() {
        if (clientes.isEmpty()) {
            System.out.println("No hay clientes registrados.");
        } else {
            for (Cliente cliente : clientes) {
                cliente.mostrarDatos();
            }
        }
    }

    private void eliminarCliente() {
        System.out.print("Ingrese el DNI del cliente a eliminar: ");
        String dni = scanner.nextLine();
        Cliente cliente = buscarClientePorDNI(dni);
        if (cliente != null) {
            clientes.remove(cliente);
            System.out.println("Cliente eliminado exitosamente.");
        } else {
            System.out.println("Cliente no encontrado.");
        }
    }

    private Cliente buscarClientePorDNI(String dni) {
        for (Cliente cliente : clientes) {
            if (cliente.getDni().equals(dni)) {
                return cliente;
            }
        }
        return null;
    }

    // -----------------------------------
    // Menú de Servicios
    // -----------------------------------
    private void menuServicios() {
        int opcion;
        do {
            mostrarMenuServicios();
            opcion = scanner.nextInt();
            scanner.nextLine(); // Consumir la nueva línea
            ejecutarOpcionMenuServicios(opcion);
        } while (opcion != 0);
    }

    private void mostrarMenuServicios() {
        System.out.println("\n---- Menú de Servicios ----");
        System.out.println("1. Agregar Servicio");
        System.out.println("2. Mostrar Servicios");
        System.out.println("3. Eliminar Servicio");
        System.out.println("0. Volver al Menú Principal");
        System.out.print("Seleccione una opción: ");
    }

    private void ejecutarOpcionMenuServicios(int opcion) {
        switch (opcion) {
            case 1:
                agregarServicio();
                break;
            case 2:
                mostrarServicios();
                break;
            case 3:
                eliminarServicio();
                break;
            case 0:
                System.out.println("Volviendo al menú principal...");
                break;
            default:
                System.out.println("Opción no válida.");
        }
    }

    private void agregarServicio() {
        System.out.print("Ingrese el nombre del servicio: ");
        String nombreServicio = scanner.nextLine();
        System.out.print("Ingrese el precio del servicio: ");
        double precio = scanner.nextDouble();
        scanner.nextLine(); // Consumir la nueva línea

        Servicio servicio = new Servicio(nombreServicio, precio);
        servicios.add(servicio);
        System.out.println("Servicio agregado exitosamente.");
    }

    private void mostrarServicios() {
        if (servicios.isEmpty()) {
            System.out.println("No hay servicios registrados.");
        } else {
            for (Servicio servicio : servicios) {
                servicio.mostrarServicio();
            }
        }
    }

    private void eliminarServicio() {
        System.out.print("Ingrese el nombre del servicio a eliminar: ");
        String nombreServicio = scanner.nextLine();
        Servicio servicio = buscarServicioPorNombre(nombreServicio);
        if (servicio != null) {
            servicios.remove(servicio);
            System.out.println("Servicio eliminado exitosamente.");
        } else {
            System.out.println("Servicio no encontrado.");
        }
    }

    private Servicio buscarServicioPorNombre(String nombreServicio) {
        for (Servicio servicio : servicios) {
            if (servicio.getNombreServicio().equalsIgnoreCase(nombreServicio)) {
                return servicio;
            }
        }
        return null;
    }
}
package tp3pelu;

public class Cliente extends Persona {
    private String telefono;
    private String direccion;
    private String dni;
    private int edad;

    public Cliente(String nombre, String email, String telefono, String direccion, String dni, int edad) {
        super(nombre, email);
        this.telefono = telefono;
        this.direccion = direccion;
        this.dni = dni;
        this.edad = edad;
    }

    // Métodos getter y setter
    public String getTelefono() {
        return telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public String getDni() {
        return dni;
    }

    public void setDni(String dni) {
        this.dni = dni;
    }

    public int getEdad() {
        return edad;
    }

    public void setEdad(int edad) {
        this.edad = edad;
    }

    // Agregar setNombre y setEmail
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    
    public void mostrarDatos() {
        System.out.println("Cliente: " + nombre + ", Email: " + email + ", Teléfono: " + telefono + ", Dirección: " + direccion + ", DNI: " + dni + ", Edad: " + edad);
    }
}
package tp3pelu;

public class Cliente extends Persona {
    private String telefono;
    private String direccion;
    private String dni;
    private int edad;

    public Cliente(String nombre, String email, String telefono, String direccion, String dni, int edad) {
        super(nombre, email);
        this.telefono = telefono;
        this.direccion = direccion;
        this.dni = dni;
        this.edad = edad;
    }

    // Métodos getter y setter
    public String getTelefono() {
        return telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public String getDni() {
        return dni;
    }

    public void setDni(String dni) {
        this.dni = dni;
    }

    public int getEdad() {
        return edad;
    }

    public void setEdad(int edad) {
        this.edad = edad;
    }

    // Agregar setNombre y setEmail
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    
    public void mostrarDatos() {
        System.out.println("Cliente: " + nombre + ", Email: " + email + ", Teléfono: " + telefono + ", Dirección: " + direccion + ", DNI: " + dni + ", Edad: " + edad);
    }
}
package tp3pelu;

public abstract class Persona {
    protected String nombre;
    protected String email;

    public Persona(String nombre, String email) {
        this.nombre = nombre;
        this.email = email;
    }

    public String getNombre() {
        return nombre;
    }

    public String getEmail() {
        return email;
    }

    public abstract void mostrarDatos();
}
package tp3pelu;

public class Servicio {
    private String nombreServicio;
    private double precio;

    public Servicio(String nombreServicio, double precio) {
        this.nombreServicio = nombreServicio;
        this.precio = precio;
    }

    public String getNombreServicio() {
        return nombreServicio;
    }

    public double getPrecio() {
        return precio;
    }

    public void mostrarServicio() {
        System.out.println("Servicio: " + nombreServicio + " - Precio: $" + precio);
    }
}
